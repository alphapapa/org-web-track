
#+begin_src text :exports none
  An elisp package that offers a set of commands to kepp track of data on the Web in Org Mode
#+end_src

* Org Web Track

=org-web-track= is an elisp package that helps you to keep track of text data on the web (e.g. news, prices or currency rates) in Org mode.

* Features
:PROPERTIES:
:CREATED:  [2023-06-24 Sat 14:21]
:END:

- Anywhere in the page

  #+begin_src text :exports none
    User can capture any part of a web page using CSS selector. Shell command or elisp function can be used as well to filter page source for avid user.
  #+end_src
  Users can capture any part of a web page by using a CSS selector. They can also filter the page source using a shell command or an Elisp function, depending on their preference.

- Web API suport

  =org-web-track= supports Web API as well. As of now, JSON is the only supported format.

- Summary view

  =org-web-track= offers column view (powered by Org Agenda Column View) which shows update of all tracking entries along with the previous.

- History table

  =org-web-track= offers a history table by logging a record when data differ from the previously checked. User can create a graph from the table using utility tool such as [[http://www.gnuplot.info/][gnuplot]].

* Usage
:PROPERTIES:
:CREATED:  [2023-06-16 Fri 09:56]
:END:
** Basic data tracking workflow
:PROPERTIES:
:CREATED:  [2023-06-16 Fri 10:37]
:END:

1. Setup selectors

   #+begin_src text :exports none
     Users must define selectors when creating tracking items. A selector specifies where to capture data within a specific URL.
   #+end_src
   The variable =org-web-track-selector-alist= is used to define a list of selection conditions in the (URL-MATCH . SELECTOR) format. If a tracking item has a URL that matches URL-MATCH, the SELECTOR is applied to the response for that URL to capture data.

   #+begin_src org :exports none
     SELECTOR is either a vector, a function or a string. The vector denotes a CSS selector(See [[https://github.com/zweifisch/enlive#start-of-content][enlive]]). The function will be called in a temporary buffer where HTML document is inserted. The string is meant to be a shell command invoked with piped HTML string.
   #+end_src
   SELECTOR can take on one of three forms: a vector, a function, or a string. If a vector is provided, it should represent a CSS selector. If a function is provided, it will be called with a temporary buffer containing the HTML document. If a string is provided, it should represent a shell command that will be invoked with the HTML string piped in.
2. Creating tracking items

   #+begin_src text :exports none
     A tracking item in =org-web-track= is represented as a single org entry.
     User needs to create an org entry first then invoke org-web-track-setup to set a tracking URL and execute initial data tracking.
   #+end_src
   To track an item in =org-web-track=, the user needs to create an org entry first and then use =org-web-track-setup= to set a tracking URL and carry out initial data tracking.
3. Updating data

   #+begin_src text :exports none
     User can update data by invoking org-web-track-update in the desired org entry. If data update is detected, org-web-track logs a new record with updated data and timestamp. They have the other option to update all tracking items in org-web-track-files by calling org-web-track-update-all.
   #+end_src
   Users can update a specific org entry by invoking =org-web-track-update=. If any updates are detected, =org-web-track= logs a new record with the updated data and a timestamp. Alternatively, users can update all tracking items in =org-web-track-files= by calling =org-web-track-update-all=.

* Installation
:PROPERTIES:
:CREATED:  [2023-06-16 Fri 09:56]
:END:
** Requirements
:PROPERTIES:
:CREATED:  [2023-06-16 Fri 10:20]
:END:

- Emacs 28.1 or higher
- Org-mode 9.6.1 or higher
- [[https://github.com/tkf/emacs-request][request.el]]
- [[https://github.com/zweifisch/enlive][enlive]]

** Installing package
:PROPERTIES:
:CREATED:  [2023-06-25 Sun 20:55]
:END:

=org-web-track= has not been registered at any package repositories. Users need to download and locate manually (or use :vc keyword in use-package for early adapters).

** use-package example
:PROPERTIES:
:CREATED:  [2023-06-25 Sun 15:09]
:END:

#+begin_src emacs-lisp :eval no :exports code
  (use-package org-web-track
    :load-path ("<org-web-track-path>")
    :init
    (setq org-web-track-selector-alist
          `(("books.toscrape.com" [.price_color])
            ("openexchangerates.org/api/latest"
             (lambda (json)
               (number-to-string (assoc-default 'JPY (assoc-default 'rates json)))))))
    :custom
    (org-web-track-files '("~/org/private.org" "~/org/to-buy.org")))
#+end_src

* License                                                          :noexport:

GPLv3
